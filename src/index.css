@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 15 44% 42%;
    --primary-foreground: 0 0% 100%;
    --primary-glow: 15 44% 52%;

    --secondary: 0 0% 96%;
    --secondary-foreground: 0 0% 20%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 15 44% 95%;
    --accent-foreground: 15 44% 20%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 15 44% 50%;

    /* Status badge colors */
    --status-active: 0 84% 60%;
    --status-active-foreground: 0 0% 98%;
    --status-hold: 217 91% 60%;
    --status-hold-foreground: 0 0% 98%;
    --status-completed: 142 76% 36%;
    --status-completed-foreground: 0 0% 98%;
    --status-cancelled: 215 14% 34%;
    --status-cancelled-foreground: 0 0% 98%;

    /* Auth-specific colors */
    --auth-background: 0 0% 96%;
    --auth-card: 0 0% 100%;
    --auth-border: 0 0% 90%;

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary-glow)));
    --gradient-auth: linear-gradient(135deg, hsl(var(--auth-background)), hsl(0 0% 98%));

    --radius: 0.5rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 15 44% 50%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 15 44% 70%;

    /* Status badge colors - dark mode */
    --status-active: 0 84% 60%;
    --status-active-foreground: 0 0% 98%;
    --status-hold: 217 91% 60%;
    --status-hold-foreground: 0 0% 98%;
    --status-completed: 142 76% 36%;
    --status-completed-foreground: 0 0% 98%;
    --status-cancelled: 215 14% 34%;
    --status-cancelled-foreground: 0 0% 98%;

    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 15 44% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 15 44% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

/* Table styles for editors - using Tiptap's built-in resizing */
.ProseMirror table {
  border-collapse: collapse;
  margin: 16px 0;
  width: 100%;
  overflow: hidden;
  table-layout: fixed;
}

.ProseMirror table td,
.ProseMirror table th {
  border: 1px solid hsl(var(--border));
  padding: 8px 12px;
  vertical-align: top;
  box-sizing: border-box;
  position: relative;
  min-height: 40px;
  word-wrap: break-word;
}

.ProseMirror table th {
  background-color: hsl(var(--muted));
  font-weight: bold;
  text-align: left;
}

.ProseMirror table .selectedCell:after {
  z-index: 2;
  position: absolute;
  content: "";
  left: 0; right: 0; top: 0; bottom: 0;
  background: rgba(200, 200, 255, 0.4);
  pointer-events: none;
}

/* Column resize handle (built-in from Tiptap) */
.ProseMirror table .column-resize-handle {
  position: absolute;
  right: -2px; 
  top: 0; 
  bottom: 0;
  width: 4px;
  z-index: 20;
  background-color: hsl(var(--primary));
  pointer-events: none;
}

/* Row resize handle - mimicking column resize behavior */
.ProseMirror table .tableWrapper {
  position: relative;
  margin: 0;
  overflow-x: auto;
}

.ProseMirror table tr {
  position: relative;
}

/* Add row resize handles similar to column handles */
.ProseMirror table tbody tr:not(:last-child)::after,
.ProseMirror table thead tr::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: -2px;
  height: 4px;
  background-color: transparent;
  cursor: ns-resize;
  z-index: 15;
}

.ProseMirror table tbody tr:not(:last-child):hover::after,
.ProseMirror table thead tr:hover::after {
  background-color: hsl(var(--primary));
}

/* Make table resizable like columns */
.ProseMirror table.resize-cursor {
  cursor: ew-resize;
}

.ProseMirror table.ProseMirror-selectednode {
  outline: 2px solid hsl(var(--primary));
}

/* Allow content to determine row height while maintaining minimum */
.ProseMirror table td {
  height: auto;
  min-height: 40px;
  resize: vertical;
  overflow: hidden;
}

/* Better table cell content handling */
.ProseMirror table td > * {
  margin: 0;
}

.ProseMirror table td > p {
  margin: 0;
  line-height: 1.4;
}

/* Enable row height adjustment via content */
.ProseMirror table td:focus {
  outline: 1px solid hsl(var(--ring));
  resize: both;
}

/* Page break styles */
.ProseMirror hr.page-break {
  border: none;
  border-top: 2px dashed hsl(var(--border));
  margin: 24px 0;
  position: relative;
}

.ProseMirror hr.page-break::after {
  content: "Page Break";
  position: absolute;
  top: -12px;
  left: 50%;
  transform: translateX(-50%);
  background: hsl(var(--background));
  padding: 0 8px;
  font-size: 12px;
  color: hsl(var(--muted-foreground));
}